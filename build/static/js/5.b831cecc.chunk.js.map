{"version":3,"sources":["pages/huoshan/huoshan.tsx","components/pubInput/pubInput.tsx","webpack:///./src/components/pubInput/pubInput.scss?786c","components/pubInput/pubInput.scss","utils/analyze.ts"],"names":["Huoshan","_super","props","_this","call","this","state","alertInfo","analyzeSuccess","__WEBPACK_IMPORTED_MODULE_0_tslib__","prototype","analyze","Val","dispatch","judge","judgeSwitch","Object","__WEBPACK_IMPORTED_MODULE_4__utils_analyze__","that","query","render","__WEBPACK_IMPORTED_MODULE_1_react__","className","__WEBPACK_IMPORTED_MODULE_3__components_pubInput_pubInput__","ownAnalyze","bind","width","height","controls","src","huoshan","_huoshanAnalyze","type","href","download","target","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_2_dva__","_a","app","PubInput","ref","input","placeholder","onClick","resultVal","value","_alertEmptySwitch","content","__webpack_require__","module","i","options","hmr","transform","locals","exports","undefined","push","req","payload","alertEmptySwitch","exec","test","setState","link","getKey","sent","errString","err_1","toString","resultErr","split"],"mappings":"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","file":"static/js/5.b831cecc.chunk.js","sourcesContent":["/*\n* 火山小视频页面\n* */\nimport * as React from \"react\";\nimport {Component} from \"react\";\nimport {connect} from \"dva\";\nimport PubInput from \"./../../components/pubInput/pubInput\"\nimport Analyze from \"./../../utils/analyze\"\n\ntype PageOwnProps = {\n    dispatch: any,\n    huoshan: any,\n    app: any\n}\n\ntype PageState = {\n    alertInfo: string,\n    analyzeSuccess: boolean\n}\n\n\nclass Huoshan extends Component <PageOwnProps, PageState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            alertInfo: \"请先将视频链接粘贴到上面的输入框\",//提示信息\n            analyzeSuccess: false,//解析成功显示下载和预览的开关\n        }\n    }\n\n    //进行解析\n    private async analyze(Val: any) {\n        let {dispatch} = this.props;\n        //正则换成链接\n        let judge = /http:\\/\\/[a-zA-Z.0-9]+\\/hotsoon\\/s\\/[A-Za-z0-9--]+\\//;\n        //正则进行判断格式\n        let judgeSwitch =\n            /[\\s\\u4E00-\\u9FA5a-zA-z0-9#@!$%^&*()（），【】！_\\-+/_,.\"~`·！@#￥%……&*（）《》><？，。/]*http:\\/\\/[a-zA-Z.0-9]+\\/hotsoon\\/s\\/[A-Za-z0-9--]+\\//;\n        Analyze({dispatch, Val,judge,judgeSwitch, that:this,query:\"huoshan/queryHuoshan\"});\n    }\n\n\n    public render() {\n        return (\n            <div>\n                <div className={\"dy-warp\"}>\n                    <PubInput alertInfo={this.state.alertInfo}\n                              ownAnalyze={this.analyze.bind(this)}>\n                    </PubInput>\n                    {/*当解析成功的时候显示*/}\n                    {this.state.analyzeSuccess}\n                    {this.state.analyzeSuccess ?\n                        <div className={'video-content'}>\n                            <video width=\"320\" height=\"240\" controls>\n                                <source\n                                    src={this.props.huoshan._huoshanAnalyze}\n                                    type=\"video/mp4\">\n                                </source>\n                                <source src={this.props.huoshan._huoshanAnalyze} type=\"video/ogg\">\n                                </source>\n                                您的浏览器不支持 video 标签。\n                            </video>\n                            <a className=\"down-btn\"\n                               href={this.props.huoshan._huoshanAnalyze}\n                               download={this.props.huoshan._huoshanAnalyze} target=\"block\">点击下载</a>\n                        </div> :\n                        null}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default connect(({app, huoshan}: any) => ({\n    app, huoshan\n}))(Huoshan);\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/huoshan/huoshan.tsx","/**\n * 公共输入框\n * */\nimport * as React from \"react\";\nimport {Component} from \"react\";\nimport {connect} from \"dva\";\nimport \"./pubInput.scss\"\n\ntype PageOwnProps = {\n    app:any,\n    alertInfo:string,//提示信息\n    ownAnalyze:() =>void,//解析的方法\n}\n\ntype PageState = {}\n\n\nclass PubInput extends Component <PageOwnProps, PageState> {\n    private input: HTMLInputElement | null;\n    public render() {\n        return (\n            <div className={\"pub-input-warp\"}>\n                <div className={\"pub-input clearfix\"}>\n                    <input className={\"float-left pub-input-item\"}\n                           type=\"text\"\n                           ref={input => this.input = input}\n                           placeholder={\"请将APP里复制的视频链接粘贴到这里\"}\n                    />\n                    <button className={\"float-left\"} onClick={() =>{\n                        // @ts-ignore\n                        let resultVal:any = this.input.value;\n                        // @ts-ignore\n                        return this.props.ownAnalyze(resultVal)\n                    }}>\n                        解析视频\n                    </button>\n                </div>\n                {this.props.app._alertEmptySwitch?<div className={\"pub-input-alert\"}>\n                    {this.props.alertInfo}\n                </div>:null}\n            </div>\n\n        )\n    }\n}\n\nexport default connect(({app}:any) =>({\n    app\n}))(PubInput);\n\n\n// WEBPACK FOOTER //\n// ./src/components/pubInput/pubInput.tsx","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./pubInput.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./pubInput.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./pubInput.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pubInput/pubInput.scss\n// module id = 345\n// module chunks = 3 4 5","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".pub-input {\\n  margin-top: 30px;\\n  margin-bottom: 10px; }\\n  .pub-input input {\\n    padding: 10px 16px;\\n    font-size: 18px;\\n    line-height: 1.3333333;\\n    border-radius: 6px;\\n    border-top-right-radius: 0;\\n    border-bottom-right-radius: 0;\\n    color: #555;\\n    background-color: #fff;\\n    background-image: none;\\n    border: 1px solid #ccc;\\n    outline: none;\\n    width: calc(100% - 140px); }\\n  .pub-input button {\\n    width: 106px;\\n    height: 46px;\\n    padding: 10px 16px;\\n    font-size: 18px;\\n    line-height: 1.3333333;\\n    border-radius: 6px;\\n    color: #fff;\\n    background-color: #20a0ff;\\n    border-color: #20a0ff;\\n    border-top-left-radius: 0;\\n    border-bottom-left-radius: 0;\\n    user-select: none;\\n    background-image: none;\\n    border: 1px solid transparent;\\n    cursor: pointer; }\\n    .pub-input button:hover, .pub-input button:focus {\\n      color: #fff;\\n      background-color: #4db3ff;\\n      border-color: #4db3ff; }\\n\\n.pub-input-alert {\\n  color: #a94442;\\n  background-color: #f2dede;\\n  padding: 5px 15px;\\n  text-align: center;\\n  margin-bottom: 20px;\\n  border: 1px solid #ebccd1;\\n  border-radius: 4px; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./src/components/pubInput/pubInput.scss\n// module id = 346\n// module chunks = 3 4 5","/*\n* 进行解析\n* **/\nexport default async function Analyze(req: any) {\n    let {dispatch, Val,that,judge,judgeSwitch,query} = req;\n    if (!Val) {\n        dispatch({\n            type: \"app/changeEmptySwitch\",\n            payload: {\n                alertEmptySwitch: true\n            }\n        });\n    } else {\n        //正则换成链接\n        let resultVal: any = judge.exec(Val);//转换之后的地址\n        //正则进行判断格式\n        if (!judgeSwitch.test(resultVal)) {\n            //视频格式不正确的时候\n            that.setState({\n                alertInfo: \"请输入正确的视频链接\"\n            });\n            dispatch({\n                type: \"app/changeEmptySwitch\",\n                payload: {\n                    alertEmptySwitch: true\n                }\n            });\n        } else {\n            //视频格式正确\n            try {\n                dispatch({\n                    type: \"app/changeEmptySwitch\",\n                    payload: {\n                        alertEmptySwitch: false\n                    }\n                });\n                await\n                    dispatch({\n                        type: query,\n                        payload: {\n                            link: resultVal[0],\n                            getKey: \"link\"\n                        }\n                    });\n                that.setState({\n                    analyzeSuccess: true\n                })\n            } catch (err) {\n                //显示接口错误信息\n                dispatch({\n                    type: \"app/changeEmptySwitch\",\n                    payload: {\n                        alertEmptySwitch: true\n                    }\n                });\n                that.setState({\n                    analyzeSuccess: false\n                });\n                let errString: string = err.toString();\n                let resultErr: string = \"\";\n                if (errString.split(\"Error: Error:\")) {\n                    resultErr = errString.split(\"Error: Error:\")[1];\n                    // @ts-ignore\n                    that.setState({\n                        alertInfo: resultErr\n                    });\n                } else {\n                    that.setState({\n                        alertInfo: err.toString(),\n                    });\n                }\n            }\n\n\n        }\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/analyze.ts"],"sourceRoot":""}